/**
 * Note！ These codes are from third parties. Not currently reviewed by the community.
 * Please do not refer to the format specifications of these codes.
 */
/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        QH_SENSOR_CATEGORY: 'Sensor',
    	QH_BUTTON_LABEL: '---BUTTON---',
    	QH_SENSOR_LABEL: '---SENSOR---',
    	QH_COLOR_LABEL: '---COLOR---',
    	QH_MPU6050_LABEL: '---GYRO---',
    	CC_CONTROL: '---遥控---',
    	QH_LEFT: 'Left',
    	QH_RIGHT: 'Right',
        CC_KEY: 'KEY %1 press',
        QH_BUTTON_GENERAL: 'Button pin %1  color %2',
//        QH_BUTTON_BOTH: 'L OR R button PIN %1',
//        QH_BUTTONFUCTION_INIT: 'Enable the multi-functionbutton port %1',
//        QH_BUTTONFUCTION_DO: 'Multi-function button Port %1 L/R %2 Trigger mode %3',
//        QH_BUTTONSingleClick: 'SingleClick',
//        QH_BUTTONDoubleClick: 'DoubleClick',
//        QH_BUTTONTripleClick: 'TripleClick',
//        QH_BUTTONSingleLongClick: 'SingleLongClick',
//        QH_BUTTONDoubleLongClick: 'DoubleLongClick',
//        QH_BUTTONTripleLongClick: 'TripleLongClick',
        QH_UltraSonicDistanceSensor: 'Utrasonic ranging Port %1 ',
        QH_LINE_FOLLOWER: 'Line follower Port %1 Left %2 Right %3',
        QH_LIGHTSENSOR: 'Light 1、sensor Port %1',
        QH_SOUND: 'Sound 1、sensor Port %1',
        QH_POTENTIOMETER: 'Potentiometer 1、sensor Port %1',
        PS2_INIT: 'init ps2 receiver pin %1 ',
        PS2_READDATA: 'read PS2 receiver data',
        PS2_GETBUTTON: 'PS2 %1 button is pressed?',
        PS2_UP: 'up',
        PS2_DOWN: 'down',
        PS2_LEFT: 'left',
        PS2_RIGHT: 'right',
        PS2_TRIANGLE: 'triangle',
        PS2_CIRCLE: 'circle',
        PS2_CROSS: 'cross',
        PS2_SQUARE: 'square',
        PS2_SELECT: 'select',
        PS2_START: 'start',
        PS2_GETJOYSTICK: 'PS2 get joystick %1',
        QH_Soilmoisture: 'Soilmoisture 1、sensor Port %1',
        QH_dht11: 'Temperature and humidity 1、sensor Port %1 parameter %2',
        QH_Temperature: 'Temperature',
        QH_Humidity: 'Humidity',
        QH_yssb_init: 'init TCS34725',
        CC_yssb_get: 'int TCS34725 color %1 %2',
        GET_TO_GAMMA:'GAMMA',
        GET_NO_GAMMA:'NO GAMMA',
        QH_MPU6050_update: 'MPU6050 (IIC) updata',
        QH_MPU6050_yaw_reset: 'YAW reset',
        QH_MPU6050_GETDATA: 'Read the value of the gyroscope %1',
        QH_Accel_X: 'X Axis Accel',
        QH_Accel_Y: 'Y Axis Accel',
        QH_Accel_Z: 'Z Axis Accel',
        QH_Gyro_X: 'X Gyro Accel',
        QH_Gyro_Y: 'Y Gyro Accel',
        QH_Gyro_Z: 'Z Gyro Accel',
        QH_readTempC: 'Temperature',
        QH_MPU6050_readYaw: 'Yaw',
        QH_gyro_pitch: 'pitch',
        QH_gyro_roll: 'roll',
        QH_MPU6050_MOTION_update: 'MPU6050 (IIC) motion updata',
        QH_MPU6050_MOTION_GETDATA: 'Read the value of the gyroscope %1',
        QH_gyro_isActivity: 'Is activity',
        QH_gyro_isInactivity: 'Is inactivity',
        QH_gyro_isPosActivityOnX: 'is Pos activity on X',
        QH_gyro_isNegActivityOnX: 'is Neg activity on X',
        QH_gyro_isPosActivityOnY: 'is Pos activity on Y',
        QH_gyro_isNegActivityOnY: 'is Neg activity on Y',
        QH_gyro_isPosActivityOnZ: 'is Pos activity on Z',
        QH_gyro_isNegActivityOnZ: 'is Neg activity on Z'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        QH_SENSOR_CATEGORY: '传感器',
    	QH_BUTTON_LABEL: '---按钮---',
    	QH_SENSOR_LABEL: '---传感器---',
    	QH_COLOR_LABEL: '---颜色---',
    	QH_MPU6050_LABEL: '---陀螺仪---',
    	CC_CONTROL: '---遥控---',
    	QH_LEFT: '左',
    	QH_RIGHT: '右',
        CC_KEY: '触碰传感器 %1 按下',
        // CC_THREE_KEY: '三色按键 %1  %2 按下',
        QH_BUTTON_GENERAL: '按钮 引脚 %1  颜色 %2',
//        QH_BUTTON_GENERAL: '左或右按钮 引脚 %1',
//        QH_BUTTONFUCTION_INIT: '启用多功能按钮 引脚 %1',
//        QH_BUTTONFUCTION_DO: '多功能按钮 引脚 %1 左右 %2 触发方式 %3',
//        QH_BUTTONSingleClick: '单击',
//        QH_BUTTONDoubleClick: '双击',
//        QH_BUTTONTripleClick: '三击',
//        QH_BUTTONSingleLongClick: '长按',
//        QH_BUTTONDoubleLongClick: '单击后长按',
//        QH_BUTTONTripleLongClick: '双击后长按',
        QH_UltraSonicDistanceSensor: '超声波测距 端口 %1 ',
        QH_LINE_FOLLOWER: '巡线 端口 %1 左路 %2 右路 %3',
        QH_LIGHTSENSOR: '光线传感器 端口 %1',
        QH_SOUND: '声音传感器 端口 %1',
        QH_POTENTIOMETER: '电位传感器 端口 %1',
        PS2_INIT: '初始化 PS2 接收器 %1 ',
        PS2_READDATA: '读取 PS2 接收器数据',
        PS2_GETBUTTON: 'PS2 %1 按键被按下?',
        PS2_UP: '上',
        PS2_DOWN: '下',
        PS2_LEFT: '左',
        PS2_RIGHT: '右',
        PS2_TRIANGLE: '三角',
        PS2_CIRCLE: '圆',
        PS2_CROSS: '叉号',
        PS2_SQUARE: '方块',
        PS2_SELECT: '选择',
        PS2_START: '开始',
        PS2_GETJOYSTICK: 'PS2获取摇杆 %1',
        QH_Soilmoisture: '土壤湿度传感器 端口 %1',
        QH_dht11: '温湿度传感器 端口 %1 参数 %2',
        QH_Temperature: '温度',
        QH_Humidity: '湿度',
        QH_yssb_init: '初始化TCS34725颜色传感器',
        CC_yssb_get: '获取TCS34725颜色值 %1  %2',
        GET_TO_GAMMA:'转GAMMA',
        GET_NO_GAMMA:'不转GAMMA',
        QH_MPU6050_update: '启用陀螺仪(IIC)刷新数据',
        QH_MPU6050_yaw_reset: '偏航检测复位',
        QH_MPU6050_GETDATA: '读取陀螺仪的值 %1',
        QH_Accel_X: 'X轴加速度',
        QH_Accel_Y: 'Y轴加速度',
        QH_Accel_Z: 'Z轴加速度',
        QH_Gyro_X: 'X轴角度',
        QH_Gyro_Y: 'Y轴角度',
        QH_Gyro_Z: 'Z轴角度',
        QH_readTempC: '温度',
        QH_MPU6050_readYaw: '偏航角',
        QH_gyro_pitch: '俯仰角',
        QH_gyro_roll: '滚转角',
        QH_MPU6050_MOTION_update: '启用陀螺仪(IIC)动作检测刷新数据',
        QH_MPU6050_MOTION_GETDATA: '读取陀螺仪的值 %1',
        QH_gyro_isActivity: '活动',
        QH_gyro_isInactivity: '静止',
        QH_gyro_isPosActivityOnX: 'X位置活动',
        QH_gyro_isNegActivityOnX: 'X角度活动',
        QH_gyro_isPosActivityOnY: 'Y位置活动',
        QH_gyro_isNegActivityOnY: 'Y角度活动',
        QH_gyro_isPosActivityOnZ: 'Z位置活动',
        QH_gyro_isNegActivityOnZ: 'Z角度活动'
    });
    return Blockly;
}

exports = addMsg;
